import argparse
from openmm.app import PDBFile, Modeller, ForceField, Simulation
from openmm import unit, app
from pathlib import Path

# Argumentos CLI
parser = argparse.ArgumentParser(description="Prepara uma prote√≠na em membrana com OpenMM.")
parser.add_argument('-i', '--input', required=True, help='Arquivo PDB da prote√≠na de entrada')
parser.add_argument('-l', '--lipid', default='POPC', help='Tipo de lip√≠dio (ex: POPC, DPPC)')
parser.add_argument('-m', '--minimumPadding', type=float, default=1.0, help='Dist√¢ncia m√≠nima (nm) entre prote√≠na e membrana')
parser.add_argument('-c', '--ionicStrength', type=float, default=0.15, help='For√ßa i√¥nica (mol/L)')
args = parser.parse_args()

# Carregar prote√≠na
pdb = PDBFile(args.input)
modeller = Modeller(pdb.topology, pdb.positions)
modeller.addHydrogens()

# Campo de for√ßa
forcefield = ForceField('amber14-all.xml', 'amber14/tip3p.xml', 'amber14/lipid17.xml')

# Adicionar membrana
modeller.addMembrane(
    forcefield,
    lipidType=args.lipid,
    membraneCenterZ=0 * unit.nanometer,
    minimumPadding=args.minimumPadding * unit.nanometer,
    positiveIon='Na+',
    negativeIon='Cl-',
    ionicStrength=args.ionicStrength * unit.molar,
    neutralize=True
)

# Criar sistema
system = forcefield.createSystem(modeller.topology, nonbondedMethod=app.PME,
                                 nonbondedCutoff=1.0 * unit.nanometer, constraints=app.HBonds)

# Nome de sa√≠da
output_filename = Path(args.input).stem + "_membrana.pdb"
with open(output_filename, 'w') as f:
    PDBFile.writeFile(modeller.topology, modeller.positions, f)

print(f"‚úÖ Estrutura salva como {output_filename}")

# Criar README.md din√¢mico
readme = f"""# üß¨ Simula√ß√£o com Membrana: {args.input}

Este sistema foi preparado automaticamente com os seguintes par√¢metros:

| Par√¢metro       | Valor                 |
|----------------|------------------------|
| Prote√≠na       | `{args.input}`         |
| Lip√≠dio        | `{args.lipid}`         |
| Padding        | `{args.minimumPadding} nm` |
| For√ßa I√¥nica   | `{args.ionicStrength} mol/L` |
| Campo de for√ßa | `amber14-all + lipid17`|

üíæ Arquivo de sa√≠da: `{output_filename}`

## üß´ Descri√ß√£o

A prote√≠na foi centralizada e inserida em uma bicamada lip√≠dica do tipo `{args.lipid}` com uma margem de solvata√ß√£o de `{args.minimumPadding} nm`, e a solu√ß√£o foi neutralizada com √≠ons (Na‚Å∫, Cl‚Åª) para uma for√ßa i√¥nica de `{args.ionicStrength} M`.

Para mais informa√ß√µes, consulte o [reposit√≥rio do OpenMM](https://github.com/openmm/openmm/wiki/Membrane-Systems).
"""

with open("README.md", "w") as f:
    f.write(readme)

print("üìò README.md gerado com sucesso!")
